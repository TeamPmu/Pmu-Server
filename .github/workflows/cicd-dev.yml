name: Pmu Development Server CI/CD

on:
  push:
    branches: [ "develop" ]

jobs:
  build-deploy:

    runs-on: ubuntu-latest

    steps:
      - name: 🍃 체크아웃 합니다.
        uses: actions/checkout@v3

      - name: 🍃 JDK 17로 설정합니다.
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 🍃 application.yml 파일을 생성합니다.
        run: |
          cd ./src/main
          mkdir resources
          cd ./resources
          touch ./application.yml
          echo "$APPLICATION" > ./application.yml
        env:
          APPLICATION: ${{ secrets.APPLICATION }}

      - name: 🍃 gradle build 를 위한 권한을 부여합니다.
        run: chmod +x gradlew

      - name: 🍃 gradle build 합니다.
        run: ./gradlew clean build --exclude-task test

      - name: 🍃 docker hub 에 로그인합니다.
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🍃 docker image 를 build 합니다.
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }} .

      - name: 🍃 docker hub 에 push 합니다.
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}

      - name: 🍃 docker hub 에서 pull 후 deploy 합니다.
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker kill ${{ secrets.DOCKER_IMAGE }}
            sudo docker rm -f ${{ secrets.DOCKER_IMAGE }}
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}
            sudo docker run -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
            --name ${{ secrets.DOCKER_IMAGE }} \
            -d ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}